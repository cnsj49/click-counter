apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.deployment.name.web }}
  namespace: {{ $.Values.namespace | default "default" }}
spec:
  selector:
    matchLabels:
      app: {{ $.Values.deployment.name.web }}
  replicas: {{ $.Values.replicaCount.web }}
  template:
    metadata:
      labels:
        app: {{ $.Values.deployment.name.web }}
    spec:
      containers:
      - name: web
        image: {{ $.Values.deployment.image.web }}
        resources:
          limits:
            cpu: 1
            memory: 1G
          requests:
            cpu: 0.5
            memory: 100M
        readinessProbe:
          tcpSocket:
            port: 5000
        env:
        - name: REDIS_HOST
          value: {{ $.Values.service.name.redis | quote }}
        - name: REDIS_PORT
          value: {{ $.Values.service.port.redis | quote }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secret.name }}
              key: {{ $.Values.secret.key }}
        ports:
        - containerPort: {{ $.Values.service.port.web }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.deployment.name.redis }}
  namespace: {{ $.Values.namespace | default "default" }}
spec:
  selector:
    matchLabels:
      app: {{ $.Values.deployment.name.redis }}
  replicas: {{ $.Values.replicaCount.redis }}
  template:
    metadata:
      labels:
        app: {{ $.Values.deployment.name.redis }}
    spec:
      containers:
      - name: redis
        image: {{ $.Values.deployment.image.redis }}
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
        resources:
          limits:
            cpu: 1
            memory: 1G
          requests:
            cpu: 0.5
            memory: 100M
        readinessProbe:
          tcpSocket:
            port: 6379
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secret.name }}
              key: {{ $.Values.secret.key }}
        ports:
        - containerPort: {{ $.Values.service.port.redis }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc  